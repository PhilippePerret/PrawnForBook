{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Gen",
				"GeneratedBook"
			],
			[
				"Praw",
				"Prawn4book"
			],
			[
				"Biblio",
				"Bibliography"
			],
			[
				"Head",
				"HeadersFooters"
			],
			[
				"Prawn",
				"Prawn4book"
			],
			[
				"polic",
				"police_names"
			],
			[
				"hel",
				"test_helper"
			],
			[
				"Assis",
				"AssistantPublishing"
			],
			[
				"p",
				"page2"
			],
			[
				"test",
				"test_helper"
			],
			[
				"get",
				"get_data_in_recipe"
			],
			[
				"last",
				"last_id_path"
			],
			[
				"t",
				"test_helper"
			],
			[
				"ht",
				"html_path"
			],
			[
				"prece",
				"precedences_file"
			],
			[
				"pr",
				"precedence_file"
			],
			[
				"preced",
				"precedence_file"
			],
			[
				"Col",
				"Collaborator"
			],
			[
				"con",
				"console_height"
			],
			[
				"Bibli",
				"Bibliography"
			],
			[
				"NT",
				"NTextParagraph"
			],
			[
				"Prw",
				"PrawnView"
			],
			[
				"fonte",
				"fontes_choisies"
			],
			[
				"wai",
				"wait_for_keypress"
			],
			[
				"Pro",
				"ProcDisplayer"
			],
			[
				"te",
				"test_helper"
			],
			[
				"pro",
				"proc_path"
			],
			[
				"font",
				"font_size"
			],
			[
				"fr",
				"fragment_idx"
			],
			[
				"save",
				"save_as_csv_in"
			],
			[
				"mustB",
				"mustBeValidMot"
			],
			[
				"dispatch",
				"dispatchAsToken"
			],
			[
				"level",
				"level2_searched"
			],
			[
				"tabl",
				"table_mots_courant"
			],
			[
				"buildA",
				"buildAsSelect"
			],
			[
				"buildAs",
				"buildAsMultiSelect"
			],
			[
				"ITA",
				"ITActionClass"
			],
			[
				"chan",
				"changeInCadre"
			],
			[
				"dis",
				"dispoId"
			],
			[
				"LOG_M",
				"LOG_MESSAGE_TYPES"
			],
			[
				"fi",
				"firstScenario"
			],
			[
				"first",
				"firstchar"
			],
			[
				"isMulti",
				"isMultiAutocompletion"
			],
			[
				"calcLi",
				"calcLinesAndPagesCount"
			],
			[
				"PREF",
				"PREFERENCES_DATA"
			],
			[
				"PR",
				"PREFERENCES_DATA"
			],
			[
				"calc",
				"calcLineHeight"
			],
			[
				"previ",
				"previousContent"
			],
			[
				"So",
				"ScoreAnalyse"
			],
			[
				"prol",
				"prolongLine"
			],
			[
				"sv",
				"svg_path"
			],
			[
				"CO",
				"CODES_ET_RESULTATS"
			],
			[
				"querySe",
				"querySelectorAll"
			],
			[
				"imag",
				"image_folder"
			],
			[
				"jj_",
				"jj_mm_aaaa_hh_mm"
			],
			[
				"assert_not",
				"assert_nothing_raised"
			],
			[
				"asernot",
				"assert_nothing_raised"
			],
			[
				"est",
				"estimated_end_time"
			],
			[
				"estim",
				"estimated_start_time"
			],
			[
				"filtr",
				"filtre_by_exclusion"
			],
			[
				"asrai",
				"assert_raise"
			],
			[
				"asse",
				"assert_instance_of"
			],
			[
				"get_",
				"get_new_id_tache"
			],
			[
				"tksui",
				"tksuiv_id"
			],
			[
				"tkpar",
				"tkpar_b"
			],
			[
				"aetr",
				"assert_true"
			],
			[
				"cur",
				"current_tache_id"
			],
			[
				"esti",
				"estimated_end_time"
			],
			[
				"aet",
				"assert_true"
			],
			[
				"adju",
				"adjust_time_since"
			],
			[
				"aer",
				"assert_raise"
			],
			[
				"estima",
				"estimated_start_time"
			],
			[
				"ase",
				"assert_raise"
			],
			[
				"estimat",
				"estimated_start_time"
			],
			[
				"reqi",
				"require_relative"
			],
			[
				"requi",
				"require_relative"
			],
			[
				"F",
				"Facture"
			],
			[
				"for",
				"frozen_string_literal"
			],
			[
				"a",
				"a"
			],
			[
				"query",
				"querySelectorAll"
			],
			[
				"ins",
				"instance_checker"
			],
			[
				"h",
				"h2"
			],
			[
				"th",
				"th"
			],
			[
				"en",
				"encoding"
			]
		]
	},
	"buffers":
	[
		{
			"file": "lib/commandes/build/build.rb",
			"settings":
			{
				"buffer_size": 14291,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/Users/philippeperret/Library/Application Support/Sublime Text/Packages/Prawn4Book/APP_DESCRIPTION.md",
			"settings":
			{
				"buffer_size": 314,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": " ou"
					},
					"AwAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwAAAAAAAAC7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " simplement"
					},
					"CwAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAADDAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgAAAAAAAAC+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkAAAAAAAAAygAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"",
					null,
					"AQAAAMoAAAAAAAAAywAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"",
					null,
					"AQAAAMoAAAAAAAAAygAAAAAAAAABAAAAYA",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert_snippet",
					{
						"contents": "`$0`"
					},
					"AQAAAMoAAAAAAAAAzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "pfb-"
					},
					"BAAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAAM4AAAAAAAAAzgAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/Users/philippeperret/Library/Application Support/Sublime Text/Packages/Prawn4Book/Default (OSX).sublime-keymap",
			"settings":
			{
				"buffer_size": 2404,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"duplicate_line",
					null,
					"AQAAAMMAAAAAAAAAhAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAADDAAAAAAAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "super+"
					},
					"BgAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\\\""
					},
					"AwAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAAQAQAAAAAAAAMAAADigJwQAQAAAAAAABEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAABMBAAAAAAAAEwEAAAAAAAADAAAA4oCd",
					"AQAAAAAAAAABAAAAFAEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\\\""
					},
					"AgAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "lat"
					},
					"BAAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADRAAAAAAAAAAUAAABzdXBlctEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					3,
					"left_delete",
					null,
					"AwAAANIAAAAAAAAA0gAAAAAAAAABAAAAdNEAAAAAAAAA0QAAAAAAAAABAAAAYdAAAAAAAAAA0AAAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "alt"
					},
					"AwAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "option"
					},
					"BwAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADRAAAAAAAAAAMAAABhbHTRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAOICAAAAAAAA4wIAAAAAAAAAAAAA4wIAAAAAAADlAgAAAAAAAAAAAADlAgAAAAAAAOYCAAAAAAAAAAAAAOYCAAAAAAAA6AIAAAAAAAAAAAAA4wIAAAAAAADjAgAAAAAAAAIAAAAgIOYCAAAAAAAA5wIAAAAAAAAAAAAA5wIAAAAAAADpAgAAAAAAAAAAAADkAgAAAAAAAOQCAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAA4gIAAAAAAADiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5gIAAAAAAADmAgAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAA4wIAAAAAAADjAgAAAAAAAAAAAAAAADhA"
				],
				[
					42,
					1,
					"paste",
					null,
					"AQAAAOQCAAAAAAAAEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AIAAAAAAADkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAPMCAAAAAAAA8wIAAAAAAAABAAAAIvMCAAAAAAAA8wIAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA9AIAAAAAAAD0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAAPICAAAAAAAA8gIAAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPICAAAAAAAA9AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"right_delete",
					null,
					"AQAAAPMCAAAAAAAA8wIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPMCAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"right_delete",
					null,
					"AQAAAPQCAAAAAAAA9AIAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA9AIAAAAAAAD0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAACwDAAAAAAAALAMAAAAAAAAPAAAAJHswOiRTRUxFQ1RJT059LAMAAAAAAAA9AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAMAAAAAAAA7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					2,
					"left_delete",
					null,
					"AgAAACsDAAAAAAAAKwMAAAAAAAABAAAAIioDAAAAAAAAKgMAAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAALAMAAAAAAAAsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					2,
					"right_delete",
					null,
					"AgAAADsDAAAAAAAAOwMAAAAAAAABAAAAXDsDAAAAAAAAOwMAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAOwMAAAAAAAA7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"paste",
					null,
					"AQAAAAIEAAAAAAAAYQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAAA"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAEEAAAAAAAAAgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQQAAAAAAAABBAAAAAAAAP///////+9/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAAMEAAAAAAAABQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"right_delete",
					null,
					"AQAAAG8EAAAAAAAAbwQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAbwQAAAAAAABvBAAAAAAAAAAAAAAAADhA"
				],
				[
					82,
					1,
					"paste",
					null,
					"AQAAAN0CAAAAAAAAOwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QIAAAAAAADdAgAAAAAAAAAAAAAAAAAA"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANwCAAAAAAAA3QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AIAAAAAAADcAgAAAAAAAP///////+9/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "tr!e"
					},
					"BQAAACADAAAAAAAAIQMAAAAAAAAAAAAAIQMAAAAAAAAhAwAAAAAAAAUAAABmYWxzZSEDAAAAAAAAIgMAAAAAAAAAAAAAIgMAAAAAAAAjAwAAAAAAAAAAAAAjAwAAAAAAACQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAMAAAAAAAAlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					2,
					"left_delete",
					null,
					"AgAAACMDAAAAAAAAIwMAAAAAAAABAAAAZSIDAAAAAAAAIgMAAAAAAAABAAAAIQ",
					"AQAAAAAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "ue"
					},
					"AgAAACIDAAAAAAAAIwMAAAAAAAAAAAAAIwMAAAAAAAAkAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgMAAAAAAAAiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAAOICAAAAAAAA4gIAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA5AIAAAAAAADkAgAAAAAAAAAAAAAAAFJA"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAIICAAAAAAAAhAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggIAAAAAAACCAgAAAAAAAAAAAAAAAEhA"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOQCAAAAAAAA5gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AIAAAAAAADkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAAA0CAAAAAAAADgIAAAAAAAAAAAAADgIAAAAAAAAQAgAAAAAAAAAAAAAQAgAAAAAAABICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQIAAAAAAAANAgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABIAwAAAAAAAAAAAABIAwAAAAAAAEoDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQMAAAAAAABFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"left_delete",
					null,
					"AQAAAEgDAAAAAAAASAMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAEQDAAAAAAAARgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAMAAAAAAABEAwAAAAAAAAAAAAAAADhA"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "super"
					},
					"BgAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADRAAAAAAAAAAYAAABvcHRpb27RAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AgAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADXAAAAAAAAAAIAAABcIg",
					"AQAAAAAAAAABAAAA1gAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "options"
					},
					"CAAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADRAAAAAAAAAAUAAABzdXBlctEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"left_delete",
					null,
					"AQAAANYAAAAAAAAA1gAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA1wAAAAAAAADXAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/commandes/build/lib/paragraphes.rb",
			"settings":
			{
				"buffer_size": 2927,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					3,
					"left_delete",
					null,
					"AwAAAKgFAAAAAAAAqAUAAAAAAABBAgAAICAgICAjIAogICAgICAjIC0tLSBQUsOJLVRSQUlURU1FTlQgRFUgUEFSQUdSQVBIRSAtLS0KICAgICAgIyAKICAgICAgIyBTJ2lsIGV4aXN0ZSB1biBtb2R1bGUgcGFyc2VyIGV0IHF1ZSBsZSBwYXJhZ3JhcGhlIGVzdCB2cmFpbWVudAogICAgICAjIHVuIHBhcmFncmFwaGUgKGV0IG5vbiBwYXMgdW5lIGTDqWZpbml0aW9uLCB1biBzdHlsZSBvdSBhdXRyZSkKICAgICAgIyBhbG9ycyBvbiBwYXJzZSBjZSBwYXJhZ3JhcGhlIHBvdXIgZW4gdGlyZXIgbGVzIGluZm9ybWF0aW9ucwogICAgICAjIHV0aWxlcyBvdSBmYWlyZSBkZXMgcmVtcGxhY2VtZW50cyAocGFyIGV4ZW1wbGUgZGVzIHLDqWbDqXJlbmNlcwogICAgICAjIG91IGRlcyBwcmlzZXMgZGUgbW90cyBkJ2luZGV4KQogICAgICAjIAogICAgICAjIGlmIHBkZmJvb2subW9kdWxlX3BhcnNlcj8gJiYgcGFyYWdyYXBoZS5wYXJhZ3JhcGg/CiAgICAgICMgaWYgcGRmYm9vay5tb2R1bGVfcGFyc2VyPyAmJiBwYXJhZ3JhcGhlLnNvbWVfdGV4dD8KICAgICAgIyAgIHBkZmJvb2suX19wYXJhZ3JhcGhfcGFyc2VyKHBhcmFncmFwaGUsIHNlbGYpCiAgICAgICMgZW5kCqcFAAAAAAAApwUAAAAAAAABAAAAIKYFAAAAAAAApgUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAqAUAAAAAAADlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					2,
					"left_delete",
					null,
					"AgAAAFcFAAAAAAAAVwUAAAAAAABPAAAAICAgICAgIyBzcHkgIlRleHQgcGFyYWdyYXBoZSBhdmFudCBwYXJzZXIgOiAje3BhcmFncmFwaGUudGV4dC5pbnNwZWN0fSIub3JhbmdlClYFAAAAAAAAVgUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVwUAAAAAAACmBQAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/required/Types_paragraphes/NTextParagraph.rb",
			"settings":
			{
				"buffer_size": 12315,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "=begin\n\nModule rassemblant toutes les méthodes qui permettent de formater\nles textes (sauf, bien entendu, le formateurs définis pour le livre\nou la collection dans helpers.rb et formaters.rb)\n\nPourquoi \"bien entendu\" ci-dessus ????\nÇa serait pourtant ici que ça serait le mieux.\n\n=end\nmodule Prawn4book\nclass PdfBook\n  # Méthode qui doit être surclassée par les modules propres\n  def parser_formater(str,pdf); str end\n\nclass AnyParagraph\n\n  ##\n  # Préformatage d'un string quelconque, dissocié de tout élément.\n  # Ça peut être tout aussi bien le @text d'un paragraphe que le\n  # contenu d'une cellule de table.\n  # \n  # Ce préformatage n'a pas besoin de connaitre le pdf-viewer\n  # courant.\n  # \n  def self.preformatage(str)\n    # \n    # Traitement des codes ruby \n    # \n    # (ce sont tous les codes qui sont mis dans #{...})\n    # \n    str = __traite_codes_ruby_in(str)\n    # spy \"str après code ruby : #{text.inspect}\".orange\n\n    # \n    # Traitement des formats inline markdown \n    # (les étoiles, tirets plats, etc.)\n    # \n    # Ne sont pas traités ici les listes (qui demande un traitement\n    # au moment de l'impression) ou les blocs de notes\n    # \n    str = __traite_format_markdown_inline(str)\n    # spy \"str après format markdown inline : #{text.inspect}\".orange\n\n    return str    \n  end\n\n  # [String] Le texte final, tel qu'il est vraiment écrit par \n  # pdf.\n  attr_reader :final_text\n  \n  # [Hash] Table des spécifications finales pour l'impression du\n  # paragraphe (quel qu'il soit)\n  attr_accessor :final_specs\n\n\n  def preformate(pdf)\n    spy \"#preformate de #{text.inspect}\"\n    self.final_specs = {}\n    if pfbcode && pfbcode.parag_style\n      final_specs.merge!(pfbcode.parag_style)\n    end\n    # \n    # Détection de la nature du texte\n    # \n    detecte_et_traite_nature_paragraphe(pdf)\n    # \n    # Préformatage général\n    # \n    @text = self.class.preformatage(text)\n\n  end\n\n  #\n  # @produit @final_text (le texte final à afficher)\n  # \n  def final_formatage(pdf)\n    spy \"-> final_formatage de #{text.inspect}\".jaune\n    @text = formate_text(pdf, text)\n\n    @final_text = self.class.formatage_final(text, pdf)\n\n    #\n    # Maintenant qu'on a tous les éléments (options*), on peut\n    # parser et formater le paragraphe.\n    # *MAIS d'où viennent-ils et comment les récupère-t-on… il y a\n    # un bug là-dessus et je n'en plus aucune idée…………………\n    # \n    if pdfbook.module_parser? # && parag.some_text?\n    if pdfbook.module_parser? # && parag.some_text?\n      # pdfbook.__paragraph_parser(self, pdf)\n    end\n\n    spy \"Fin #final_formatage de #{text.inspect}\"\n  end\n\n  #\n  # @class\n  # \n  # Méthode qui passe par toutes les méthodes de formatage, personna-\n  # lisées comme communes.\n  # \n  def self.formatage_final(str, pdf)\n    str = pdfbook.parser_formater(str, pdf)\n    return str\n  end\n\n  def self.pdfbook; @pdfbook ||= PdfBook.current end\n\n  # = main =\n  #\n\n  ##\n  # On doit détecter la nature de certains paragraphes avant le\n  # formatage pour éviter certains problème. Typiquement, si un\n  # paragraphe est un item de liste et qu'il contient un texte en \n  # italique, il peut ressembler à :\n  #   * un item de *liste* avec italique\n  # Mais s'il est formaté tel quel, alors la portion \"* un item de \"\n  # va être considérée comme en italique.\n  # Il faut donc :\n  #   - détecter qu'il s'agit un item de liste (self.list_item?)\n  #   - retirer la marque de début dans @text\n  # On peut ensuite le formater comme convenu\n  def detecte_et_traite_nature_paragraphe(pdf)\n    # \n    # Est-ce une citation ?\n    # \n    @is_citation = paragraph? && text.match?(REG_CITATION)\n    if citation?\n      @text = text[1..-1].strip\n      final_specs.merge!({size: font_size(pdf) + 2, mg_left: 1.cm, mg_right: 1.cm, mg_top: 0.5.cm, mg_bot: 0.5.cm, no_num:true})\n    end\n    # \n    # Est-ce un item de liste\n    # \n    @is_list_item = paragraph? && text.match?(REG_LIST_ITEM)\n    if list_item?\n      @text = text[1..-1].strip\n      final_specs.merge!({mg_left:3.mm, no_num: true, cursor_positionned: true})\n    end\n  end\n  REG_LIST_ITEM = /^\\* .+$/.freeze\n  REG_CITATION  = /^> .+$/.freeze\n\n\n\n  def formate_text(pdf, str)\n    spy \"[formate_text] str initial : #{str.inspect}\".orange\n\n    if list_item?\n      str = formate_as_list_item(pdf, str)\n    elsif citation?\n      str = formate_as_citation(pdf, str)\n    end\n\n    #\n    # Traitement des marques bibliograghiques\n    # \n    if Bibliography.any?\n      str = __traite_termes_bibliographiques_in(str)\n      # spy \"str après recherche biblio : #{str.inspect}\".orange\n    end\n\n    #\n    # Traitement des références (appels et cibles)\n    # \n    str = __traite_references_in(str)\n\n    #\n    # Traitement des mots indexés\n    # \n    str = __traite_mot_indexed(str)\n\n    #\n    # Ajout (optionnel) de la position du cursor\n    # (débuggage et mise en place du texte)\n    # \n    str = __maybe_add_cursor_position(str)\n\n    spy \"[formate_text] str final : #{str.inspect}\".orange\n    \n    return str\n  end\n\n\n  def __traite_mot_indexed(str)\n    if str.match?('index:') || str.match?('index\\(')\n      str = __traite_mots_indexed_in(str)\n      # spy \"str après recherche index : #{str.inspect}\".orange\n    end\n    \n    return str\n  end\n\n  def formate_as_list_item(pdf, str)\n    str = text\n    pdf.update do \n      move_cursor_to_next_reference_line\n      float { text '– ' }\n    end\n    return str\n  end\n\n  def formate_as_citation(pdf, str)\n    str = \"<em>#{str.strip}</em>\"\n    return str\n  end\n\n\n  ##\n  # Pour le debuggage on peut vouloir ajouter la valeur du curseur\n  # en début de texte du paragraphe. Pour ce faire, on ajouter\n  # l'option '--cursor' à la ligne de commande\n  # @rappel\n  #   Le \"curseur\", c'est la hauteur vertical du prochain texte\n  #   écrit avec 'pdf.text'\n  # \n  # @return [Boolean] true s'il faut ajouter la valeur du curseur\n  def self.add_cursor_position?\n    :TRUE == @@addcurspos ||= true_or_false(CLI.option(:cursor))\n  end\n  def add_cursor_position?\n    self.class.add_cursor_position?\n  end\n\n\nprivate\n\n  # @return [String] Le texte formaté\n  def __traite_references_in(str)    \n    if str.match?('\\( <\\-')\n      str = str.gsub(REG_CIBLE_REFERENCE) do\n        cible = $1.freeze\n        spy \"[REFERENCES] Consignation de la référence #{cible.inspect} ({page:#{first_page}, paragraph:#{numero}})\".bleu\n        pdfbook.table_references.add(cible, {page:first_page, paragraph:numero})\n        ''\n      end\n      # \n      # On corrige les éventuels retours chariot intempestifs\n      # \n      str = str.gsub(/  +/, ' ')\n    end\n    # Appels de référence\n    if str.match?('\\( \\->')\n      str = str.gsub(REG_APPEL_REFERENCE) do\n        appel = $1.freeze\n        spy \"[REFERENCES] Consignation de l'appel à la référence #{appel.inspect}\".bleu\n        pdfbook.table_references.get(appel, self)\n      end\n    end\n    return str\n  end\n\n  # @return [String] Le texte formaté\n  def __traite_mots_indexed_in(str)\n    # spy \"Traitement de #{str.inspect} pour l'index\"\n    str = str.gsub(/index:(.+?)(\\b)/) do\n      dmot = {mot: $1.freeze, page: first_page, paragraph:numero}\n      pdfbook.page_index.add(dmot)\n      dmot[:mot] + $2\n    end\n    str = str.gsub(/index\\((.+?)\\)/) do\n      mot, canon = $1.freeze.split('|')\n      dmot = {mot: mot, canon: canon, page: first_page, paragraph: numero}\n      pdfbook.page_index.add(dmot)\n      dmot[:mot]\n    end\n    return str\n  end\n\n  def __maybe_add_cursor_position(str)\n    # S'il le faut (options), ajouter la position du curseur en\n    # début de paragraphe.\n    if paragraph? && add_cursor_position?\n      if str.is_a?(Array)\n        str[0] = pdf.add_cursor_position(str[0])\n      else\n        str = pdf.add_cursor_position(str) \n      end\n    end\n\n    return str    \n  end\n\n  ##\n  # Traitement des termes propres aux bibliographies\n  # \n  # @return [String] Le texte formaté\n  def __traite_termes_bibliographiques_in(str)\n    str.gsub(Bibliography::REG_OCCURRENCES) do\n      \n      bib_tag = $1.freeze\n      item_av, item_ap = $2.freeze.split('|')\n\n      biblio = Bibliography.get(bib_tag) || raise(\"Impossible de trouver la bibliographie de tag #{bib_tag.inspect}\")\n      canon, actual = \n        if (bibitem = biblio.exist?(item_av))\n          [item_av, item_ap]\n        elsif item_ap && (bibitem = biblio.exist?(item_ap))\n          [item_ap, item_av]\n        else\n          # \n          # Item de bibliographie inconnu\n          # \n          unfound = [item_av,item_ap].compact.join(\"/\")\n          building_error(ERRORS[:biblio][:bib_item_unknown] % [\"#{unfound}\".inspect, bib_tag])\n          [nil, item_av]\n        end\n\n      unless canon.nil?\n        # \n        # Si le canon est défini (ie si le mot a été reconnu dans la bibliographie)\n        # alors on enregistre une occurrence pour lui.\n        # \n\n        # \n        # Ajout de cette occurrence\n        # \n        bibitem.add_occurrence({page: first_page, paragraph: numero})\n\n        if actual\n          bibitem.formate_for_text(actual, self)\n        elsif bibitem.respond_to?(:formated_for_text)\n          bibitem.formated_for_text(self)\n        else\n          bibitem.title\n        end\n      end\n    end\n  end\n\n  # \n  # Traitement des codes ruby, qui se présentent dans le texte par\n  # « #{...} »\n  # Le code à l'intérieur des accolades peut être du code à interpréter\n  # tel quel (un opération par exemple, ou une date) ou alors une\n  # méthode personnalisée définie dans les helpers.\n  # \n  # @return [String] Le texte formaté\n  # \n  REG_CODE_RUBY = /#\\{(.+?)\\}/.freeze\n  def self.__traite_codes_ruby_in(str)\n    str.gsub(REG_CODE_RUBY) do\n      code = $1.freeze\n      methode = nil\n      if code.match?(REG_HELPER_METHOD)\n        # C'est peut-être une méthode d'helpers qui est appelée\n        methode = code.match(REG_HELPER_METHOD)[1].to_sym\n      end\n      if methode && pdfbook.pdfhelpers && pdfbook.pdfhelpers.respond_to?(methode)\n        # \n        # Une méthode helper propre au livre ou à la collection\n        # \n        pdfbook.pdfhelpers.instance_eval(code)\n      else\n        #\n        # Un code général\n        # \n        eval(code)\n      end\n    end\n  end\n  REG_HELPER_METHOD = /^([a-zA-Z0-9_]+)(\\(.+?\\))?$/\n\n\n  def self.__traite_format_markdown_inline(str)\n    # \n    # Les gras ('**')\n    # \n    str = __traite_bold(str)\n    # \n    # Les italiques\n    # \n    str = __traite_italic(str)\n    # \n    # Les soulignés\n    # \n    str = __traite_underline(str)\n    #\n    # Les exposants\n    # \n    str = __traite_superscript(str)\n\n    return str\n  end\n\n  def self.__traite_bold(str)\n    str = str.gsub(REG_BOLD) do\n      txt = $1.freeze\n      SPAN_BOLD % txt \n    end\n  end\n  REG_BOLD      = /\\*\\*(.+?)\\*\\*/.freeze\n  SPAN_BOLD     = \"<b>%s</b>\".freeze\n\n  def self.__traite_italic(str)\n    return str unless str.match?('\\*')\n    str .gsub(REG_ETOILE, 'mmSTARmm'.freeze)\n        .gsub(REG_ITALIC, SPAN_ITALIC)\n        .gsub(REG_START,  '*'.freeze)\n  end\n  REG_ETOILE    = /\\\\\\*/.freeze\n  REG_ITALIC    = /\\*(.+?)\\*/.freeze\n  SPAN_ITALIC   = '<em>\\1</em>'.freeze\n  REG_START     = /mmSTARmm/.freeze\n\n  def self.__traite_underline(str)\n    return str unless str.match?('_')\n    str .gsub(REG_TIRET_PLAT, 'mmTIRETmmPLATmm'.freeze)\n        .gsub(REG_UNDERLINE, SPAN_UNDERLINE)\n        .gsub(REG_PLAT_TIRET, '_'.freeze)\n  end\n  REG_TIRET_PLAT = /\\\\_/.freeze\n  REG_UNDERLINE = /__(.+?)__/.freeze\n  SPAN_UNDERLINE = '<u>\\1</u>'.freeze\n  REG_PLAT_TIRET = /mmTIRETmmPLATmm/.freeze\n\n  def self.__traite_superscript(str)\n    str = str.gsub(REG_EXPOSANT) do\n      lettre = $1.freeze\n      expo   = $2.freeze\n      SPAN_EXPOSANT % [lettre, expo]\n    end\n  end\n  REG_EXPOSANT = /([0-9XVIC])\\^(er|re|e)/.freeze\n  SPAN_EXPOSANT = '%s<sup>%s</sup>'.freeze\n\n\nend #/class AnyParagraph\nend #/class PdfBook\nend #/module Prawn4book\n",
			"file": "lib/commandes/build/lib/parser_formater.rb",
			"file_size": 11778,
			"file_write_time": 133256881873884859,
			"settings":
			{
				"buffer_size": 11722,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAJcIAAAAAAAAmAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwgAAAAAAACXCAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMoIAAAAAAAAywgAAAAAAAAAAAAAywgAAAAAAADPCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyggAAAAAAADKCAAAAAAAAAAAAAAAkINA"
				],
				[
					7,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAM8IAAAAAAAA0QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwgAAAAAAADPCAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "ùao"
					},
					"AwAAANEIAAAAAAAA0ggAAAAAAAAAAAAA0ggAAAAAAADTCAAAAAAAAAAAAADTCAAAAAAAANQIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QgAAAAAAADRCAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					3,
					"left_delete",
					null,
					"AwAAANMIAAAAAAAA0wgAAAAAAAABAAAAb9IIAAAAAAAA0ggAAAAAAAABAAAAYdEIAAAAAAAA0QgAAAAAAAACAAAAw7k",
					"AQAAAAAAAAABAAAA1AgAAAAAAADUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "*mais"
					},
					"BQAAANEIAAAAAAAA0ggAAAAAAAAAAAAA0ggAAAAAAADTCAAAAAAAAAAAAADTCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA1QgAAAAAAAAAAAAA1QgAAAAAAADWCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QgAAAAAAADRCAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					4,
					"left_delete",
					null,
					"BAAAANUIAAAAAAAA1QgAAAAAAAABAAAAc9QIAAAAAAAA1AgAAAAAAAABAAAAadMIAAAAAAAA0wgAAAAAAAABAAAAYdIIAAAAAAAA0ggAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAA1ggAAAAAAADWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "MAIS"
					},
					"BAAAANIIAAAAAAAA0wgAAAAAAAAAAAAA0wgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANUIAAAAAAAAAAAAANUIAAAAAAAA1ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0ggAAAAAAADSCAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " d'o"
					},
					"BAAAANYIAAAAAAAA1wgAAAAAAAAAAAAA1wgAAAAAAADYCAAAAAAAAAAAAADYCAAAAAAAANkIAAAAAAAAAAAAANkIAAAAAAAA2ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1ggAAAAAAADWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"",
					null,
					"AQAAANoIAAAAAAAA2wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"",
					null,
					"AQAAANoIAAAAAAAA2ggAAAAAAAABAAAAXg",
					"AQAAAAAAAAABAAAA2wgAAAAAAADbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "^"
					},
					"AQAAANoIAAAAAAAA2wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAANoIAAAAAAAA2ggAAAAAAAABAAAAXg",
					"AQAAAAAAAAABAAAA2wgAAAAAAADbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "ù"
					},
					"AQAAANoIAAAAAAAA2wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ggAAAAAAADaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " viennent"
					},
					"CQAAANsIAAAAAAAA3AgAAAAAAAAAAAAA3AgAAAAAAADdCAAAAAAAAAAAAADdCAAAAAAAAN4IAAAAAAAAAAAAAN4IAAAAAAAA3wgAAAAAAAAAAAAA3wgAAAAAAADgCAAAAAAAAAAAAADgCAAAAAAAAOEIAAAAAAAAAAAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA4ggAAAAAAADjCAAAAAAAAAAAAADjCAAAAAAAAOQIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wgAAAAAAADbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQIAAAAAAAA5QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAOQIAAAAAAAA5AgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5QgAAAAAAADlCAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "-ils"
					},
					"BAAAAOQIAAAAAAAA5QgAAAAAAAAAAAAA5QgAAAAAAADmCAAAAAAAAAAAAADmCAAAAAAAAOcIAAAAAAAAAAAAAOcIAAAAAAAA6AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " et"
					},
					"AwAAAOgIAAAAAAAA6QgAAAAAAAAAAAAA6QgAAAAAAADqCAAAAAAAAAAAAADqCAAAAAAAAOsIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AgAAAAAAADoCAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " comment"
					},
					"CAAAAOsIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADtCAAAAAAAAAAAAADtCAAAAAAAAO4IAAAAAAAAAAAAAO4IAAAAAAAA7wgAAAAAAAAAAAAA7wgAAAAAAADwCAAAAAAAAAAAAADwCAAAAAAAAPEIAAAAAAAAAAAAAPEIAAAAAAAA8ggAAAAAAAAAAAAA8ggAAAAAAADzCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wgAAAAAAADrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " les"
					},
					"BAAAAPMIAAAAAAAA9AgAAAAAAAAAAAAA9AgAAAAAAAD1CAAAAAAAAAAAAAD1CAAAAAAAAPYIAAAAAAAAAAAAAPYIAAAAAAAA9wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wgAAAAAAADzCAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " récupère"
					},
					"CQAAAPcIAAAAAAAA+AgAAAAAAAAAAAAA+AgAAAAAAAD5CAAAAAAAAAAAAAD5CAAAAAAAAPoIAAAAAAAAAAAAAPoIAAAAAAAA+wgAAAAAAAAAAAAA+wgAAAAAAAD8CAAAAAAAAAAAAAD8CAAAAAAAAP0IAAAAAAAAAAAAAP0IAAAAAAAA/ggAAAAAAAAAAAAA/ggAAAAAAAD/CAAAAAAAAAAAAAD/CAAAAAAAAAAJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wgAAAAAAAD3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "-t-on…"
					},
					"BgAAAAAJAAAAAAAAAQkAAAAAAAAAAAAAAQkAAAAAAAACCQAAAAAAAAAAAAACCQAAAAAAAAMJAAAAAAAAAAAAAAMJAAAAAAAABAkAAAAAAAAAAAAABAkAAAAAAAAFCQAAAAAAAAAAAAAFCQAAAAAAAAYJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAAYJAAAAAAAABwkAAAAAAAAAAAAABwkAAAAAAAAICQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgkAAAAAAAAGCQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAgJAAAAAAAACQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAkAAAAAAAAICQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAAgJAAAAAAAACAkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAACQkAAAAAAAAJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAAgJAAAAAAAACQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAkAAAAAAAAICQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " y"
					},
					"AgAAAAkJAAAAAAAACgkAAAAAAAAAAAAACgkAAAAAAAALCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQkAAAAAAAAJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAAsJAAAAAAAADAkAAAAAAAAAAAAADAkAAAAAAAANCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwkAAAAAAAALCQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AwAAAA0JAAAAAAAADgkAAAAAAAAAAAAADgkAAAAAAAASCQAAAAAAAAAAAAASCQAAAAAAABMJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQkAAAAAAAANCQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " un"
					},
					"AwAAABMJAAAAAAAAFAkAAAAAAAAAAAAAFAkAAAAAAAAVCQAAAAAAAAAAAAAVCQAAAAAAABYJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwkAAAAAAAATCQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " bug"
					},
					"BAAAABYJAAAAAAAAFwkAAAAAAAAAAAAAFwkAAAAAAAAYCQAAAAAAAAAAAAAYCQAAAAAAABkJAAAAAAAAAAAAABkJAAAAAAAAGgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgkAAAAAAAAWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " là-dessus"
					},
					"CgAAABoJAAAAAAAAGwkAAAAAAAAAAAAAGwkAAAAAAAAcCQAAAAAAAAAAAAAcCQAAAAAAAB0JAAAAAAAAAAAAAB0JAAAAAAAAHgkAAAAAAAAAAAAAHgkAAAAAAAAfCQAAAAAAAAAAAAAfCQAAAAAAACAJAAAAAAAAAAAAACAJAAAAAAAAIQkAAAAAAAAAAAAAIQkAAAAAAAAiCQAAAAAAAAAAAAAiCQAAAAAAACMJAAAAAAAAAAAAACMJAAAAAAAAJAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgkAAAAAAAAaCQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " et"
					},
					"AwAAACQJAAAAAAAAJQkAAAAAAAAAAAAAJQkAAAAAAAAmCQAAAAAAAAAAAAAmCQAAAAAAACcJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAkAAAAAAAAkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " je"
					},
					"AwAAACcJAAAAAAAAKAkAAAAAAAAAAAAAKAkAAAAAAAApCQAAAAAAAAAAAAApCQAAAAAAACoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwkAAAAAAAAnCQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " n'en"
					},
					"BQAAACoJAAAAAAAAKwkAAAAAAAAAAAAAKwkAAAAAAAAsCQAAAAAAAAAAAAAsCQAAAAAAAC0JAAAAAAAAAAAAAC0JAAAAAAAALgkAAAAAAAAAAAAALgkAAAAAAAAvCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgkAAAAAAAAqCQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " plus"
					},
					"BQAAAC8JAAAAAAAAMAkAAAAAAAAAAAAAMAkAAAAAAAAxCQAAAAAAAAAAAAAxCQAAAAAAADIJAAAAAAAAAAAAADIJAAAAAAAAMwkAAAAAAAAAAAAAMwkAAAAAAAA0CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwkAAAAAAAAvCQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " audun"
					},
					"BgAAADQJAAAAAAAANQkAAAAAAAAAAAAANQkAAAAAAAA2CQAAAAAAAAAAAAA2CQAAAAAAADcJAAAAAAAAAAAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAkAAAAAAAA0CQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					3,
					"left_delete",
					null,
					"AwAAADkJAAAAAAAAOQkAAAAAAAABAAAAbjgJAAAAAAAAOAkAAAAAAAABAAAAdTcJAAAAAAAANwkAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAOgkAAAAAAAA6CQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "cune"
					},
					"BAAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAADoJAAAAAAAAOwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwkAAAAAAAA3CQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " idée………………"
					},
					"CwAAADsJAAAAAAAAPAkAAAAAAAAAAAAAPAkAAAAAAAA9CQAAAAAAAAAAAAA9CQAAAAAAAD4JAAAAAAAAAAAAAD4JAAAAAAAAPwkAAAAAAAAAAAAAPwkAAAAAAABACQAAAAAAAAAAAABACQAAAAAAAEEJAAAAAAAAAAAAAEEJAAAAAAAAQgkAAAAAAAAAAAAAQgkAAAAAAABDCQAAAAAAAAAAAABDCQAAAAAAAEQJAAAAAAAAAAAAAEQJAAAAAAAARQkAAAAAAAAAAAAARQkAAAAAAABGCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwkAAAAAAAA7CQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "…"
					},
					"AQAAAEYJAAAAAAAARwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgkAAAAAAABGCQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"duplicate_line",
					null,
					"AQAAAIMJAAAAAAAAtwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggkAAAAAAACCCQAAAAAAAAAAAAAAcIVA"
				]
			]
		},
		{
			"contents": "Searching 320 files for \"include ParserParagraphModule\" (case sensitive)\n\n0 matches\n\nSearching 320 files for \"ParserParagraphModule\" (case sensitive)\n\n~/Programmes/Prawn4book/lib/commandes/build/build.rb:\n  247  \n  248  \n  249:     if module_parser? && ParserParagraphModule.respond_to?(:report)\n  250:       ParserParagraphModule.report\n  251      end\n  252  \n\n~/Programmes/Prawn4book/lib/commandes/build/lib/PdfBook.rb:\n  132    def require_module_parser\n  133      module_parser_paths.each { |md| require md }\n  134:     extend ParserParagraphModule\n  135      # self.class.current = self\n  136    end\n\n~/Programmes/Prawn4book/Manuel/Manuel.md:\n 1461  end\n 1462  \n 1463: module ParserParagraphModule\n 1464    def __paragraph_parser(paragraph)\n 1465      #... cf ci-dessus\n ....\n 1864  # in parser.rb (collection ou livre)\n 1865  \n 1866: module ParserParagraphModule\n 1867    class Personne\n 1868      @@personnes = []\n ....\n 2083  ~~~ruby\n 2084  # Dans parser.rb\n 2085: module ParserParagraphModule\n 2086    \n 2087    def\t__paragraph_parser(paragraph, pdf)\n ....\n 2113     SPAN_PERSO = '<font name=\"Bangla\" size=\"%s\">%s</font>'.freeze\n 2114      \n 2115: end #/module ParserParagraphModule\n 2116  ~~~\n 2117  \n ....\n 2151  \n 2152  ~~~ruby\n 2153: module ParserParagraphModule # ce nom est absolument à respecter\n 2154    def\t__paragraph_parser(paragraphe)\n 2155      # Parse le paragraphe {PdfBook::NTextParagraph}\n ....\n 2179  Ce fichier contient donc deux modules :\n 2180  \n 2181: * **ParserParagraphModule** définit la méthode `__paragraph_parser` qui parse les paragraphes.\n 2182  * **PrawnCustomBuilderModule** définit la méthode `__custom_builder` qui construit les éléments du livre en rapport avec les informations relevées.\n 2183  \n\n~/Programmes/Prawn4book/resources/renders/aspect_textes/parser.rb:\n    1: module ParserParagraphModule\n    2    class << self\n    3      def init_parser\n    .\n  185      pdf.insert(grand_titre_index)\n  186      pdf.font 'Garamond', font_style: :normal\n  187:     ParserParagraphModule.table_mots.each do |imot, destinations|\n  188        # puts \"Traitement index de : #{imot.inspect}\"\n  189        # pdf.formatted_text [\n  ...\n  199      pdf.insert(grand_titre_filmo)\n  200      pdf.font 'Garamond', font_style: :normal\n  201:     ParserParagraphModule.table_films.each do |ifilm, destinations|\n  202        pdf.formatted_text [\n  203          {text: ifilm.titre, size: 10},\n\n~/Programmes/Prawn4book/resources/templates/parser.rb:\n    1: module ParserParagraphModule\n    2  \n    3    ##\n\n~/Programmes/Prawn4book/tests/assets/essais/book_essais/parser.rb:\n    1: module ParserParagraphModule\n    2  \n    3    ##\n\n~/Programmes/Prawn4book/tests/assets/essais/books/essaibook/parser.rb:\n    1: module ParserParagraphModule\n    2  \n    3    ##\n\n~/Programmes/Prawn4book/tests/assets/essais/books/essaibook/texte.pfb.md.backup:\n    1: module ParserParagraphModule\n    2  \n    3    ##\n\n~/Programmes/Prawn4book/tests/assets/essais/init/parser.rb:\n    1: module ParserParagraphModule\n    2  \n    3    ##\n\n~/Programmes/Prawn4book/tests/compare/tests/formaters/police_proportionnelle/parser.rb:\n    1: module ParserParagraphModule\n    2  \n    3    def parser_formater(str, pdf)\n\n18 matches across 10 files\n",
			"settings":
			{
				"buffer_size": 3236,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/commandes/build/lib/PdfBook.rb",
			"settings":
			{
				"buffer_size": 5508,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/required/NParagraphe/NParagraphe_predicate.rb",
			"settings":
			{
				"buffer_size": 435,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"vie pa",
				"View Package File"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"Package Control:Lis",
				"Package Control: List Packages"
			],
			[
				"Package Control: Origa",
				"Package Control: Install Package"
			],
			[
				"ter",
				"Preferences: Terminal Settings – Default"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 184.0,
		"history":
		[
			"irb",
			"floor",
			"32/15",
			"( ( 324.0 / 15 ) - 1 ) * 15",
			"reload()",
			"clear",
			"view.settings().get(\"font_face\")",
			"view.run_command('example')",
			"view.substr(r)",
			"r.substr()",
			"r.size()",
			"r = sublime.Region(15,25)",
			"r = view.sublime.Region(15,25)",
			"r = view.Region(15,25)",
			"r.substr()",
			"r = sublime.Region(15, 25)",
			"view[4]",
			"4.view",
			" view.4",
			"view.name()",
			"view.file_name()",
			"sublime.reload_all_modules()",
			"sublime.reload",
			"import sublime",
			"reload('ProximotSTPackage')",
			"reload",
			"from importlib import reload",
			"sys.version",
			"import sys",
			"sys.version",
			"1+1",
			"pwd"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/philippeperret/Library/Application Support/Sublime Text/Packages/Prawn4Book"
	],
	"file_history":
	[
		"/Users/philippeperret/Programmes/Prawn4book/lib/locales/fr/errors.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/classes/bibliography.cls.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/classes/bibliography.inst.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/classes/bib_item.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/filtering/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/Parags_per_type/parsers_formaters.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/recipe_collection.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/runner.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/test-todo.md",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Types_paragraphes/NTable.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/Parags_per_type/NImage.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/filtering/formater.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/all_properties_with_bloc/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/filtering/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/all_properties_with_bloc/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/all_properties_with_bloc/formater.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Types_paragraphes/NTextParagraph.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/Parags_per_type/NTextParagraph.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/reference_grid_methods.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/PrawnView.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Types_paragraphes/AnyParagraph.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/build.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/RECIPE.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/formate_with_bloc/formater.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/largeur_restantes/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/formate_with_bloc/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/formate_with_bloc/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/readme.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/largeur_restantes/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/Manuel/Manuel.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/formate_with_bloc/recipe.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/PdfBook.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/formaters/double_formaters/formater.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/formaters/double_formaters/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/formaters/formater.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/formaters/recipe_collection.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/TODO.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/formaters/double_formaters/recipe.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/InputTextFile.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/test_helper.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/borders_widths_explicites/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/borders_widths_explicites/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/.gitignore",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/simple_table/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/tables_test.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_width_explicite_values/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_widths_pourcentages/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_width_explicite_values/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_width_pourcentage/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_width_pourcentage/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_widths_pourcentages/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_widths_mixtes/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_widths_mixtes/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_width_explicite_value/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/column_width_explicite_value/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/alignements_cellules/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/alignements_cellules/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/table-avec-width-pourcent/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/table-avec-width-pourcent/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/generated_book/book.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/generated_book/abstract_recipe.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/simple_table/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/table-avec-width/texte.pfb.md",
		"/Users/philippeperret/Programmes/Prawn4book/tests/compare/tests/tables/table-avec-width/data-test.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/paragraphes.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/PrawnOwner.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Fonte.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Types_paragraphes/P4BCode.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/NParagraphe/Paragraphe_parser.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/PdfBook.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/headers_footers/footer.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/headers_footers/main.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/headers_footers/disposition.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/headers_footers/headfooter.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/build.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/instance.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/book_format/data.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/init/lib/required/InitedThing.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/init/lib/required/utils.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/init/lib/required/builders/recipe.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/init/lib/required/BuilderFile.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Prawn4book.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/assistant/assistants/titres.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Tdm.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/Parags_per_type/NTitre.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/NParagraphe/NParagraphe_parser.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/table_of_content/data.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Types_paragraphes/NTitre.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/pages_speciales.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/constants.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/special_pages_abstract/define.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/locales/fr/prompts.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/assistant/assistants/bibliographies.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/integration/bibliographies_tests.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/classes/bibliography_definition.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/classes/bib_item_definition.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/biblio/biblio.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/modules/tty_facilitators.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/locales/fr/messages.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Command.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/lib/constants.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/PdfBook.cls.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/sandbox/sandbox.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/assistant/assistant.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/help/help.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/lexique/lib/lexique.txt",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/assistant/assistants/biblios.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/classes/bibliography.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/bibliographies_test.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/generated_book/bibliography_factory.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/generated_book/recipe_factory.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/utils/methods.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/ReferencesTable.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/references_test.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/Bibliography-OLD.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/generated_book/_generated_book/recipe.yaml",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/Bibliography.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/generated_book/required.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/utils/Hash.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/data.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies/define.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/bibliographies.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/pages/special_pages_abstract/data.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/required/Recipe.rb",
		"/Users/philippeperret/Programmes/Prawn4book/tests/format/numerotation_test.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/headers_footers/bookpage.rb",
		"/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib/headers_footers/header.rb"
	],
	"find":
	{
		"height": 45.0
	},
	"find_in_files":
	{
		"height": 191.0,
		"where_history":
		[
			"",
			"/Users/philippeperret/Programmes/Prawn4book/tests,<project filters>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ParserParagraphModule",
			"include ParserParagraphModule",
			"folder",
			"title",
			"tag",
			"bib_item_unknown",
			"Impossible de trouver l'item",
			"TheMazeRunner--2014",
			"5",
			"4",
			"3",
			"2",
			"1",
			"default_font_name",
			"@deprecated Utiliser default_font_and_style",
			"REG_UNDERLINE",
			"perso",
			"distance_from_text",
			")\n",
			"init_second_turn",
			"init_first_turn",
			"def formated_text",
			"10",
			"20",
			"calc_implicite_values",
			"table_style",
			"style_table:",
			":style_table",
			"ps[:style_table]",
			"rationalise_pourcentages_in",
			"3",
			"2",
			"1",
			"module_formatage_path",
			"get_module_formatage",
			"own_formaters",
			"__formate",
			"helper",
			"helpers",
			"require_module_formatage",
			"module_formatage_path",
			"get_module_formatage",
			"formater.rb",
			"table_style",
			"Deuxième ligne : ",
			"test",
			"book_path",
			"height",
			"width",
			"default_font_name",
			"Utiliser default_font_and_style",
			"test_name",
			"2",
			"book_folder",
			"book_table_path",
			"GeneratedBookTitleTestor",
			"codenextparag",
			"is_for_next_paragraph",
			"code_for_next_paragraph",
			"pfbcode",
			"NTitre",
			"dispatch_by_type",
			"kramdown",
			"unfound_included_file",
			"Le fichier à inclure",
			"bib_item_unknown",
			"Impossible de trouver l'item",
			"fonte.name",
			"end",
			"font_name",
			"num",
			"DEFAULT_DATA",
			"confirm_create_recipe",
			"choices_fonts",
			"add_title",
			"get_data",
			"data_titles",
			":default_font",
			"default_font",
			"data_fonts",
			"simple_key",
			"add_choice",
			"calc_ref_line",
			"font2leading",
			"choix_defaut",
			"defvalue",
			"utils",
			"dformat",
			"DTERMS",
			"save_data_bibliographies",
			"name: ",
			"valid_if",
			"PROMPTS[:Define]",
			"la",
			"remove_prec",
			"un",
			"biblio",
			"BIBLIO",
			"    , value",
			"    book_",
			"book_",
			"precedencize",
			"dchoix[:value_method]",
			"data_biblios",
			"hliste_of_biblio",
			"values_for_select",
			"def_value",
			"main_data",
			"biblio",
			"define_biblios",
			"main_data_biblio",
			"data_bibliographies",
			"biblio",
			"key_numerotation",
			"occurrences",
			"pour_tester_livre",
			"tester_livre",
			"add_occurrence_to",
			"require_module_formatage",
			"module_formatage_path",
			"FatalError",
			"add_occurrence",
			"title",
			"suite_texte_with_cross_ref_for_pages",
			"treate_as_biblio",
			"get_cross_reference",
			"Je ne peux pas retourner la référence croisée",
			"crossable_requires_book_path"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"table_class:",
			":table_class",
			"width",
			"info_style",
			"in_collection?"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "lib/commandes/build/build.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14291,
						"regions":
						{
						},
						"selection":
						[
							[
								6059,
								6059
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 4762.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/philippeperret/Library/Application Support/Sublime Text/Packages/Prawn4Book/APP_DESCRIPTION.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 314,
						"regions":
						{
						},
						"selection":
						[
							[
								207,
								207
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/philippeperret/Library/Application Support/Sublime Text/Packages/Prawn4Book/Default (OSX).sublime-keymap",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2404,
						"regions":
						{
						},
						"selection":
						[
							[
								213,
								213
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PackageDev/Package/Sublime Text Keymap/Sublime Text Keymap.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 6.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/commandes/build/lib/paragraphes.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2927,
						"regions":
						{
						},
						"selection":
						[
							[
								1366,
								1366
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 915.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/required/Types_paragraphes/NTextParagraph.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12315,
						"regions":
						{
						},
						"selection":
						[
							[
								712,
								712
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 752.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 5,
					"file": "lib/commandes/build/lib/parser_formater.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11722,
						"regions":
						{
						},
						"selection":
						[
							[
								2486,
								2486
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1165.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3236,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										253,
										274
									],
									[
										309,
										330
									],
									[
										531,
										552
									],
									[
										681,
										702
									],
									[
										847,
										868
									],
									[
										980,
										1001
									],
									[
										1170,
										1191
									],
									[
										1254,
										1275
									],
									[
										1487,
										1508
									],
									[
										1823,
										1844
									],
									[
										2005,
										2026
									],
									[
										2273,
										2294
									],
									[
										2487,
										2508
									],
									[
										2611,
										2632
									],
									[
										2739,
										2760
									],
									[
										2877,
										2898
									],
									[
										2994,
										3015
									],
									[
										3139,
										3160
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								531,
								531
							]
						],
						"settings":
						{
							"default_dir": "/Users/philippeperret/Programmes/Prawn4book/lib/commandes/build/lib",
							"detect_indentation": false,
							"incomplete_sync": null,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/commandes/build/lib/PdfBook.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5508,
						"regions":
						{
						},
						"selection":
						[
							[
								4366,
								4366
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 2632.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/required/NParagraphe/NParagraphe_predicate.rb",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 435,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 33.0
	},
	"input":
	{
		"height": 150.0
	},
	"layout":
	{
		"cells":
		[
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			],
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			0.312214611872,
			0.80959399525,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SFTP":
	{
		"height": 168.0
	},
	"output.exec":
	{
		"height": 210.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Ruby/Ruby.sublime-build",
	"project": "PFB.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"NTA",
				"lib/required/Types_paragraphes/NTable.rb"
			],
			[
				"NT",
				"lib/required/Types_paragraphes/NTable.rb"
			],
			[
				"RECIP",
				"lib/required/RECIPE.rb"
			],
			[
				"Fonte",
				"lib/required/Fonte.rb"
			],
			[
				"Font",
				"lib/required/Fonte.rb"
			],
			[
				"font",
				"lib/required/Fonte.rb"
			],
			[
				"fonte",
				"lib/required/Fonte.rb"
			],
			[
				"prom",
				"lib/locales/fr/prompts.rb"
			],
			[
				"TO",
				"TODO.md"
			],
			[
				"recip",
				"lib/required/Recipe.rb"
			],
			[
				"rec",
				"lib/required/Recipe.rb"
			],
			[
				"Sp",
				"lib/required/first/Spy.rb"
			],
			[
				"rapport_annuel_collaborateur",
				"lib/modules/report/templates/rapport_annuel_collaborateur/main.erb"
			],
			[
				"util",
				"lib/required/utils.rb"
			],
			[
				"Produi",
				"edic/lib/classes/produit.rb"
			],
			[
				"Pro",
				"edic/lib/classes/produit.rb"
			],
			[
				"ven",
				"edic/lib/classes/vente.rb"
			],
			[
				"prece",
				"edic/lib/required/first/Precedences.rb"
			],
			[
				"period",
				"iced/lib/_first_required/Periode.rb"
			],
			[
				"Perio",
				"iced/lib/_first_required/Periode.rb"
			],
			[
				"perio",
				"iced/lib/_first_required/Periode.rb"
			],
			[
				"templa",
				"Prawn4book/resources/templates/recipe_collection.yaml"
			],
			[
				"Manu",
				"Manuel/Manuel.md"
			],
			[
				"Man",
				"Manuel/Manuel.md"
			],
			[
				"todo",
				"TODO.md"
			],
			[
				"recipe",
				"lib/required/Recipe.rb"
			],
			[
				"NTi",
				"lib/required/Types_paragraphes/NTitre.rb"
			],
			[
				"Reci",
				"lib/required/Recipe.rb"
			],
			[
				"gene",
				"lib/modules/pdfbook/generate.rb"
			],
			[
				"gen",
				"lib/modules/pdfbook/generate.rb"
			],
			[
				"exe",
				"commands/proc/lib/required/Executor.rb"
			],
			[
				"To",
				"TODO.md"
			],
			[
				"TODO",
				"TODO.md"
			],
			[
				"ready",
				"js/app/ready.js"
			],
			[
				"parag",
				"js/app/Paragraph.js"
			],
			[
				"text fragm",
				"js/app/TextFragment.js"
			],
			[
				"edit",
				"js/app/Editor.js"
			],
			[
				"text fra",
				"js/app/TextFragment.js"
			],
			[
				"par",
				"js/app/Paragraph.js"
			],
			[
				"para",
				"js/app/Paragraph.js"
			],
			[
				"lemm",
				"js/app/Lemmas.js"
			],
			[
				"Pref",
				"js/app/Preferences.js"
			],
			[
				"Ky",
				"js/app/Console/KeyManager.js"
			],
			[
				"rea",
				"js/app/ready.js"
			],
			[
				"Mot",
				"js/app/Mot.js"
			],
			[
				"Para",
				"js/app/Paragraph.js"
			],
			[
				"key",
				"js/app/Keyboard.js"
			],
			[
				"Waa",
				"lib/required/system/waa.rb"
			],
			[
				"comm",
				"css/app/common.css"
			],
			[
				"filter data",
				"js/app/Filter_Data.js"
			],
			[
				"fil",
				"js/app/Filter.js"
			],
			[
				"dispo css",
				"css/app/Dispositions.css"
			],
			[
				"TDO",
				"TODO.md"
			],
			[
				"scene",
				"js/app/Scene.js"
			],
			[
				"Scena js",
				"js/app/Scenario.js"
			],
			[
				"Prev",
				"js/app/Preview.js"
			],
			[
				"List",
				"js/system/ListManager.js"
			],
			[
				"Filter",
				"js/app/ScenarioFilter.js"
			],
			[
				"Cadre",
				"js/app/Cadre.js"
			],
			[
				"InCa",
				"js/app/InCadre.js"
			],
			[
				"L",
				"js/system/Log.js"
			],
			[
				"Scenario",
				"js/app/Scenario.js"
			],
			[
				"Insi",
				"js/system/InsideTest.js"
			],
			[
				"Inc",
				"js/app/InCadre.js"
			],
			[
				"read",
				"js/app/ready.js"
			],
			[
				"Scene",
				"js/app/Scene.js"
			],
			[
				"In",
				"js/app/InCadre.js"
			],
			[
				"Person",
				"js/app/Personnage.js"
			],
			[
				"coom",
				"js/system/common.js"
			],
			[
				"scena",
				"js/app/Scenario.js"
			],
			[
				"Timeli",
				"js/app/Timeline.js"
			],
			[
				"Log",
				"js/system/Log.js"
			],
			[
				"scenario",
				"js/app/Scenario.js"
			],
			[
				"ListMa",
				"js/system/ListManager.js"
			],
			[
				"Disp",
				"js/app/Disposition.js"
			],
			[
				"Previe",
				"js/app/Preview.js"
			],
			[
				"InC",
				"js/app/InCadre.js"
			],
			[
				"Timli",
				"js/app/Timeline.js"
			],
			[
				"dis",
				"js/app/Disposition.js"
			],
			[
				"Cad",
				"js/app/Cadre.js"
			],
			[
				"Con",
				"js/app/Console.js"
			],
			[
				"DOc",
				"lib/required/Document.rb"
			],
			[
				"UI",
				"js/app/UI.js"
			],
			[
				"Op",
				"js/app/Options.js"
			],
			[
				"App",
				"lib/App.rb"
			],
			[
				"app js",
				"js/app/App.js"
			],
			[
				"tod",
				"TODO.md"
			],
			[
				"main",
				"js/main.js"
			],
			[
				"pian",
				"js/Piano.js"
			],
			[
				"stat",
				"lib/Tache_statuts.rb"
			],
			[
				"tes",
				"lib/Tache_tests.rb"
			],
			[
				"test",
				"lib/Tache_tests.rb"
			],
			[
				"CLIT",
				"lib/CLI/CLITable.rb"
			],
			[
				"MyT",
				"lib/MyTaches.rb"
			],
			[
				"Tab",
				"lib/CLI/CLI_Tableizor.rb"
			],
			[
				"EDI",
				"lib/Tache_edition.rb"
			],
			[
				"edition",
				"lib/Tache_edition.rb"
			],
			[
				"cal",
				"lib/Tache_calculs.rb"
			],
			[
				"calc",
				"lib/Tache_calculs.rb"
			],
			[
				"my",
				"lib/MyTaches.rb"
			],
			[
				"cla",
				"lib/Tache_class.rb"
			],
			[
				"aid",
				"lib/Tache_aide.rb"
			],
			[
				"ai",
				"lib/Tache_aide.rb"
			],
			[
				"edi",
				"lib/Tache_edition.rb"
			],
			[
				"sta",
				"lib/Tache_statuts.rb"
			],
			[
				"data",
				"lib/Tache_data.rb"
			],
			[
				"Cat",
				"lib/MiniClasses/Categorie.rb"
			],
			[
				"editio",
				"lib/Tache_edition.rb"
			],
			[
				"hel",
				"lib/Tache_helpers.rb"
			],
			[
				"My",
				"lib/MyTaches.rb"
			],
			[
				"clas",
				"lib/Tache_class.rb"
			],
			[
				"rapp",
				"lib/Tache_Rappel.rb"
			],
			[
				"TES",
				"lib/Tache_tests.rb"
			],
			[
				"dat",
				"lib/Tache_data.rb"
			],
			[
				"M",
				"lib/MyTaches.rb"
			],
			[
				"e",
				"lib/Tache_edition.rb"
			],
			[
				"time",
				"lib/libraries/Time.rb"
			],
			[
				"uti",
				"lib/CLI/CLI_utilities.rb"
			],
			[
				"tim",
				"lib/libraries/Time.rb"
			],
			[
				"tab",
				"lib/CLI/CLI_Tableizor.rb"
			],
			[
				"tabl",
				"lib/CLI/CLI_Tableizor.rb"
			],
			[
				"ins",
				"lib/Tache_instance.rb"
			],
			[
				"tse",
				"lib/Tache_tests.rb"
			],
			[
				"date",
				"lib/libraries/Date_utils.rb"
			],
			[
				"da",
				"lib/libraries/Date_utils.rb"
			],
			[
				"String",
				"lib/String.rb"
			],
			[
				"Str",
				"lib/_first_required/String.rb"
			],
			[
				"data_menu",
				"commands/compta/lib/data_menus.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Programmes/Prawn4book/PFB-Base.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 331.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
