[
  {"keys": ["\""], "command": "insert_snippet", "args": {"contents": "“$0”"}, "context":[
      { "key": "eol_selector", "operator": "equal", "operand": "source.pfb", "match_all": true }
  ]},
  {"keys": ["option+7"], "command": "insert_snippet", "args": {"contents": "\"$0\""}, "context":[
      { "key": "eol_selector", "operator": "equal", "operand": "source.pfb", "match_all": true }
  ]},
  // Désactive le comportement par défaut
  {"keys": ["("], "command": "insert_snippet", "args": {"contents": "($0"}, "context":
    [
    // { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\(", "match_all": true },    
      { "key": "eol_selector", "operator": "equal", "operand": "source.pfb", "match_all": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
    ]
  },

  { "keys": ["("], "command": "insert_snippet", "args": {"contents": "(${0:$SELECTION})"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "eol_selector", "operator": "equal", "operand": "source.pfb", "match_all": true }
    ]
  },


  {"keys": ["("], "command": "insert_snippet", "args": {"contents": "( $0 ))"}, "context":[
    { "key": "eol_selector", "operator": "equal", "operand": "source.pfb", "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true }
  ]},
  {"keys": ["!"], "command":"insert_snippet", "args":{"contents": "!-- $0 -->"}, "context":[
    { "key": "eol_selector", "operator": "equal", "operand": "source.pfb", "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": "<", "match_all": true }
  ]},
  {"keys":["*"], "command":"insert_snippet", "args": {"contents": "*$1* $0"}, "context":[
    { "key": "eol_selector", "operator": "equal", "operand": "source.pfb", "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": ".", "match_all": true }
  ]},
  {"keys":["`"], "command":"insert_snippet", "args": {"contents": "`$1` $0"}, "context":[
    { "key": "eol_selector", "operator": "equal", "operand": "source.pfb", "match_all": true },
    { "key": "preceding_text", "operator": "regex_contains", "operand": "\\`", "match_all": true }
  ]},

  // italics markdown
  {"keys": ["super+i"], "command":"insert_snippet", "args":{"contents":"*${0:$SELECTION}*"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      // { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\*$", "match_all": true },
      { "key": "following_text", "operator": "not_regex_contains", "operand": "^\\*", "match_all": true }      
    ]
  },
  // ça devrait supprimer les italics, mais ça ne le fait pas
  { "keys": ["super+i"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      // { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "\\*$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true }
    ]
  },


  // gras markdown
  {"keys": ["super+b"], "command":"insert_snippet", "args":{"contents":"**${0:$SELECTION}**"}, "context":
    []
  },
  // souligné markdown
  {"keys": ["super+u"], "command":"insert_snippet", "args":{"contents":"__${0:$SELECTION}__"}, "context":
    []
  },

  {"keys":["'"], "command":"insert_snippet", "args":{"contents":"’"}},
  {"keys":["option+4"], "command":"insert_snippet", "args":{"contents":"'"}},

]
